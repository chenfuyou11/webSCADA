@model Model.ModelViews.DateTime_View
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>空压机压力功率散点图</title>
    <link href="~/Content/ListLayui/static/admin/layui/css/layui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Content/ListLayui/static/admin/layui/layui.js"></script>
</head>
<body>
        <input type="hidden" id="hide"value="@ViewBag.stationep"/>
        <input type="hidden" id="sId" value="@ViewBag.Sid" />
    <div class="demoTable" style="float:right;margin:0 20px 20px 0">
        搜索开始时间：
        <div class="layui-inline">
            <input type="text" class="layui-input" value="@Model.Time1" id="starttime">
        </div>
        搜索结束时间：
        <div class="layui-inline">
            <input type="text" class="layui-input" value="@Model.Time2" id="endtime">
        </div>
        <button class="layui-btn" id="layui-btn">搜索</button>
    </div>
    <div class="layui-row">

        <div id="stationepowermainp" style="height: 600px; max-width: 900px; margin: 0 auto">
        </div>
    </div>
        <script src="~/Scripts/code/highcharts.js"></script>
      
        <script src="~/Scripts/code/highcharts-more.js"></script>
</body>
</html>
<script>
    $(document).ready(function () {
        var startDate = $("#starttime").val();
        var endDate = $("#endtime").val();
        var datajson = [];        
        var str = $("#hide").val();
        //获取n#空压站的名字
        var idValue = $("#sId").val().charAt(3, 1);
        var sarrr = [];
        $.each(JSON.parse(str), function (index, item) {
         

            
            var sarr=[]
            $.each(item, function (i, j) {
                sarr[i] = [j.mainp, j.mainq];
            })
            
            datajson.push({
                name: index +1+"#空压机",                
                data: sarr
            });
            sarrr=sarr;
          
        })
        
       
       
        Highcharts.setOptions({
            lang: {
                printChart: "打印图表",
                downloadJPEG: "下载JPEG 图片",
                downloadPDF: "下载PDF文档",
                downloadPNG: "下载PNG图片",
                downloadSVG: "下载SVG矢量图",
                resetZoom: "还原"
            }
        });
        var stationepowermainpCharts = {
            chart: {
                type: 'scatter',
                zoomType: 'xy',
            },
            title: {
                text: idValue+'#空压站下各空压机压力电功率散点图',
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                title: {
                    enabled: true,
                    text: ''
                },
                startOnTick: true,
                endOnTick: true,
                showLastLabel: true
            },
            yAxis: {
                title: {
                    text: '电功率(EPOWER),bar'
                }
            },
            legend: {
            },
            plotOptions: {
                scatter: {
                    marker: {
                        radius: 5,
                        states: {
                            hover: {
                                enabled: true,
                                lineColor: 'rgb(100,100,100)'
                            }
                        }
                    },
                    states: {
                        hover: {
                            marker: {
                                enabled: false
                            }
                        }
                    },
                    tooltip: {
                        headerFormat: '<b>{series.name}</b><br>',
                        pointFormat: '{point.x}bar,{point.y}kw'
                    }
                }
            },
            series: datajson
        };
        $("#stationepowermainp").highcharts(stationepowermainpCharts);
        console.log(stationepowermainpCharts.series);
        function getstationepowermainpScatter() {
            var startDate1 = $("#starttime").val();
            var endDate1 = $("#endtime").val();
            $.ajax({
                url: "/EfficiencyAnalysis/StationEpowerMainP",
                type: "GET",
                data: { begintime: startDate1, endtime: endDate1, sid: $("#sId").val() },
                success: function (data) {
                    var arr0 = [];
                    $.each(data,function(index, item) {
                            var arr = [];
                            $.each(item,function(i, j) {
                                    arr[i] = [j.mainp, j.mainq];
                                });
                            arr0[index] = arr;
                        });
                    var ajaxarr = [];
                    for (var i = 0; i < arr0.length; i++) {
                        if (i == 0) {
                            ajaxarr.push({
                                name: i +1+ "#空压机",
                                color: 'rgba(223, 83, 83, .5)',//8-13,0.12-.013
                                data: arr0[i]
                            });
                        }
                        else {
                            ajaxarr.push({
                                name: i +1+ "#空压机",
                                data: arr0[i]
                            });
                        }

                    }
                    stationepowermainpCharts.series = ajaxarr;
                    $("#stationepowermainp").highcharts(stationepowermainpCharts);
                }
            });
        }
        //日历
        layui.use('laydate', function () {
            var laydate = layui.laydate;
            var starttime = laydate.render({
                elem: "#starttime",
                type: "datetime",
                max: getNowFormatDate(),
                done: function (value, date) {
                    if (value != "") {
                        date.month = date.month - 1;
                        endtime.config.min = date;
                    }
                }
            })
            var endtime = laydate.render({
                elem: "#endtime",
                type: "datetime",
                max: getNowFormatDate(),
                done: function (value, date) {
                    if (value != "") {
                        date.month = date.month - 1;
                        starttime.config.max = date;
                    }
                }
            })
        })
        function getNowFormatDate() {
            var date = new Date();
            console.log("shi:" + date);
            var seperator1 = "-";
            var seperator2 = ":";
            var month = date.getMonth() + 1;
            console.log("yue:" + month)
            var strDate = date.getDate();
            console.log("tian:" + strDate);
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = "0" + strDate;
            }
            var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate
                + " " + date.getHours() + seperator2 + date.getMinutes()
                + seperator2 + date.getSeconds();
            console.log(currentdate);
            return currentdate;
        }
        //搜索按钮点击事件
        $("#layui-btn").click(function () {
            startDate = $("#starttime").val();
            endDate = $("#endtime").val();
            var begin = new Date("" + startDate + "");
            var end = new Date("" + endDate + "");
            var time1 = begin.getTime();
            var time2 = end.getTime();
            var subtract = (time2 - time1) / 1000;
            var dayhours = parseInt(subtract / (60 * 60));
            if (startDate == "" || endDate == "") {
                alert("请按要求选择开始和结束时间");
            }
            //else if (dayhours > 1) {
            //    alert("开始和结束时间间隔太大，请重新选择，不要大于1小时");
            //}
            //else if (subtract <= 0) {
            //    alert("开始时间大于等于结束时间，不可查询，请重新选择")
            //}
            else {
                getstationepowermainpScatter();
            }
        });
    });
</script>
