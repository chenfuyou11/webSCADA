@model Model.BussionObject.UserShow_BO
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>人员添加</title>
    <link href="~/Content/ListLayui/static/admin/layui/css/layui.css" rel="stylesheet" />
    <link href="../../Content/ListLayui/static/admin/css/admin.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Content/ListLayui/static/admin/layui/layui.js"></script>
</head>
<body>
    <form class="layui-form" id="editForm" style="width: 90%;padding-top: 20px; margin:0 auto;">
        @Html.AntiForgeryToken()
        <h4>添加人员信息</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boAccount, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boAccount, new { htmlAttributes = new { @class = "layui-input", @id = "account" } })
                <p id="have">账号已有<i class="layui-icon layui-icon-close" style="color:red"></i></p><p id="nohave">账号可用<i class="layui-icon layui-icon-ok" style="color:chartreuse"></i></p>
                @Html.ValidationMessageFor(model => model.boAccount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boPassWord, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boPassWord, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boPassWord, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="layui-form-item">
            @Html.LabelFor(model => model.boName, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boName, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="layui-form-item">
            @Html.LabelFor(model => model.boUserType, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boUserType, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boUserType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="layui-form-item">
            @Html.LabelFor(model => model.boSex, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boSex, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boSex, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boIDNo, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boIDNo, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boIDNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boCellphone, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boCellphone, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boCellphone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boEmail, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boEmail, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boClientID, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.DropDownListFor(model => model.boClientID, ViewBag.ClientaDD as SelectList,"--请选择--" ,new { @class = "layui-input" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boRemark, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boRemark, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boRemark, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="layui-form-item">
            @Html.LabelFor(model => model.boState, htmlAttributes: new { @class = "layui-form-label" })
            <div class="layui-input-block">
                @Html.EditorFor(model => model.boState, new { htmlAttributes = new { @class = "layui-input" } })
                @Html.ValidationMessageFor(model => model.boState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="layui-form-item">
            <div class="layui-input-block">
                <button class="layui-btn" lay-submit lay-filter="formDemo">确定</button>
                <button type="reset" class="layui-btn layui-btn-primary">重置</button>
            </div>

        </div>
    </form>
   
</body>
</html>
<script>
    $("#have").hide();
    $("#nohave").hide();
    
    //账号重复操作验证
    $("#account").mouseout(function () {
        var str = $(this).val();
        if (str.length > 2 && str.length < 15) {          
            $.ajax({
                url: "/BackManage/AccountAjax",
                type: "GET",
                data: { json: str },
                success: function (data) {
                    if (data == "有") {
                        $("#have").show();
                        $("#nohave").hide();
                       
                    }
                    else {
                        $("#nohave").show();
                        $("#have").hide();
                       
                    }
                }

            })           
        }
        else {
            $("#have").hide();
            $("#nohave").hide();
        }
    })
    $("#bag").click(function () {
        console.log($(this).val())

    })
    
    layui.use('form', function () {
        //对下拉框进行渲染,不然下拉框出不来
        var form = layui.form;
        //监听提交
        form.on('submit(formDemo)', function (data) {
            var index = parent.layer.getFrameIndex(window.name);
            console.log("window.name:" + window.name + " index:" + index);
            console.log(data);
            $.ajax({
                url: '/BackManage/UserAdd',
                type: 'POST',
                data: data.field,
                dataType: 'json',
                success: function (data) {
                    if (data == "OK")
                    {
                        layer.msg("修改成功", {
                            time: 1000,
                            icon:1
                        }, function () {
                            window.parent.location.reload();//刷新父页面
                            //关闭弹窗
                            var index = parent.layer.getFrameIndex(window.name);
                            parent.layer.close(index); //关闭当前页
                        });
                    }
                    else if (data =="E")
                    {
                        layer.msg("不能有空值", {
                            icon: 2
                        })
                    }
                    else if (data == "RE") {
                        layer.msg("账号重复", {
                            icon: 2
                        })
                    }
                }
            });
            return false;
        });
    });
</script>
