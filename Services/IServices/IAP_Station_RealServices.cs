//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IServices
{
    using System;
    using System.Collections.Generic;
    
    using Base;
    using Model;
      /// <summary>
      /// 负责每个数据表的业务逻辑操作的约定
      /// </summary>
    public partial interface IAP_Station_RealServices:IBaseServices<AP_Station_Real>
    {
        #region 针对此表的特殊操作写在此处
        #region 大数据界面空压站接口
        /// <summary>
        /// 大数据界面，空压站产气量数据
        /// </summary>
        /// <param name="currtime">当前时间</param>
        /// <param name="begtime">之前时间</param>
        /// <returns></returns>
        object GasProSer(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 大数据界面空压站蜘蛛图数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        List<decimal?[]> SprideSer(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 空压站获取蜘蛛图数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="stationID"></param>
        /// <returns></returns>
        List<decimal?[]> SprideSer(DateTime currtime, DateTime begtime,string stationID);
        #endregion
        #region 趋势分析界面空压站服务接口方法
        /// <summary>
        /// 趋势分析界面空压站实时刷新数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="sta">空压站的集合id</param>
        /// <returns></returns>
        object TrendStationAjax(DateTime currtime, DateTime begtime, List<string> sta);
        
        /// <summary>
        /// 趋势分析界面空压站所有数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="stastr">空压站的结合id</param>
        /// <returns></returns>
         object TrendStation(DateTime currtime, DateTime begtime, List<string> stastr);
        #endregion
        #region 统计分析界面空压站服务接口方法
        /// <summary>
        /// 统计分析，空压站产气量分布图
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="arr"></param>
        /// <param name="sid"></param>
        /// <returns></returns>
        object StaProduce(DateTime currtime, DateTime begtime,  string sid);
        /// <summary>
        /// 统计分析，空压站upi和放散率散点图，实时表
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="sid"></param>
        /// <returns></returns>
        object StaUpiLossMainpq(DateTime currtime, DateTime begtime, string sid);
        /// <summary>
        /// 统计分析，空压站放散率分布图，实时表
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="arr"></param>
        /// <param name="sid"></param>
        /// <returns></returns>
        object StaLoss(DateTime currtime, DateTime begtime, double[] arr, string sid);
        /// <summary>
        /// 统计分析，空压站产气量功率图，实时表
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="sid"></param>
        /// <returns></returns>
        object StaProduceEpower(DateTime currtime, DateTime begtime, string sid);
        #endregion
        #region 优化指导空压站服务接口方法
        /// <summary>
        /// 计算空压站内开机台数以及系统总开机台数
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        List<int> CentriRun_Number(DateTime currtime, DateTime begtime);
        #endregion
        #endregion
    }
}
