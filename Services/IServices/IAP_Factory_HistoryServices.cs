//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IServices
{
    using System;
    using System.Collections.Generic;
    
    using Base;
    using Model;
      /// <summary>
      /// 负责每个数据表的业务逻辑操作的约定
      /// </summary>
    public partial interface IAP_Factory_HistoryServices:IBaseServices<AP_Factory_History>
    {
        #region 针对此表的特殊操作写在此处
        object Test(DateTime currtime, DateTime begtime);
        List<AP_Factory_History> Test1(DateTime currtime, DateTime begtime);
        List<AP_Factory_History> Testt(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 本月累计工厂总流量
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        decimal? SumFactoryFlowSer(DateTime currtime, DateTime begtime);

        int ttt();
        /// <summary>
        /// 压力设定upi平均值
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="a"></param>
        /// <returns></returns>
        double PressDesignUPISer(DateTime currtime, DateTime begtime, int a);
        /// <summary>
        /// 趋势分析历史图电量能耗
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        Model.ModelViews.ShowView TrendPowerUpi(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 空压系统总产气量
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="a"></param>
        /// <returns></returns>
        object Produceflow(DateTime currtime, DateTime begtime, int a);
        /// <summary>
        /// 空压系统
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <param name="a"></param>
        /// <returns></returns>
        object ScatterSer(DateTime currtime, DateTime begtime, int a);
        object MomentSer(DateTime currtime, DateTime begtime, DateTime monthtime);
        object ScatterSer(DateTime currtime, DateTime begtime);
        List<decimal> FrequencySer(DateTime currtime, DateTime begtime, double[] jsonList);
        /// <summary>
        /// 实时点数开启必要台数图数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        Model.ViewObject.SupplyStackSumpowerpq_VO SupplySer(DateTime currtime, DateTime begtime);
        object LossSer(DateTime currtime, DateTime begtime, double[] jsonList);
        /// <summary>
        /// 大数据界面流量功率图实时数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        Model.ViewObject.SupplyStackSumpowerpq_VO StackProEpq(DateTime currtime, DateTime begtime);
        List<Model.ViewObject.Supply_View> TrendReal(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 趋势分析工厂产气量-压力-电量实时图
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        object TrendFacProducePressSumPower(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 趋势分析工厂产气量-压力-电量实时图每6秒
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        object TrendFacProducePressSumPowerAjax(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 开启必要台数流量压力功率两个图数据
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        List<Model.ViewObject.SupplyStackSumpowerpq_VO> SupplyStackSumPowerpq(DateTime currtime, DateTime begtime);
        /// <summary>
        /// k空压系统的upi
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        List<decimal?> EnergyAnalsysUPI(DateTime currtime, DateTime begtime);
        /// <summary>
        /// 统计分析气量功率
        /// </summary>
        /// <param name="currtime"></param>
        /// <param name="begtime"></param>
        /// <returns></returns>
        object ProduceEpower(DateTime currtime, DateTime begtime);
        #endregion
    } 
}
